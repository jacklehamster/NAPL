(()=>{var e={965:e=>{e.exports={FileUtils:class{constructor(e){this.XMLHttpRequest=e||globalThis.XMLHttpRequest,this.fileStock={}}async preload(...e){return Promise.all(e.map((async e=>await this.load(e))))}async load(e,t){return e?new Promise(((s,o)=>{const i=t||(e.match(/.(json)$/i)?"json":"blob"),a=[e,i].join("|");if(this.fileStock[a]){const{data:e,loaded:t,onLoadListeners:o}=this.fileStock[a];t?s(e):o.push(s)}else{const t=new this.XMLHttpRequest;this.fileStock[a]={data:null,url:e,progress:0,onLoadListeners:[]},t.open("GET",e),t.responseType=i,t.addEventListener("load",(i=>{if(200===t.status){const e=t.response;this.fileStock[a].progress=1,this.fileStock[a].loaded=!0,this.fileStock[a].data=e,this.fileStock[a].onLoadListeners.forEach((t=>t(e))),delete this.fileStock[a].onLoadListeners,s(e)}else o(new Error(`Url could not load: ${e}`))})),t.addEventListener("error",(e=>{o(new Error("Network Error"))})),t.addEventListener("progress",(e=>{this.fileStock[a].progress=e.loaded/e.total})),t.send()}})):Promise.resolve(null)}}}},847:e=>{e.exports={ImageLoader:class{constructor(e,t,s){this.preserve=e||{},this.XMLHttpRequest=t||globalThis.XMLHttpRequest,this.Image=s||globalThis.Image,this.imageStock={}}async getBlobUrl(e){return await this.loadImage(e),this.preserve[e]?this.imageStock[e]?.img.src:null}async preloadImages(...e){return Promise.all(e.map((async e=>await this.loadImage(e))))}async loadImage(e){return e?new Promise(((t,s)=>{if(this.imageStock[e]){const{img:s,loaded:o,onLoadListeners:i}=this.imageStock[e];o?t(s):i.push(t)}else{const o=new this.XMLHttpRequest,i=new this.Image;this.imageStock[e]={img:i,url:e,progress:0,onLoadListeners:[]},o.open("GET",e),o.responseType="blob",o.addEventListener("load",(i=>{if(200===o.status)if(e.match(/.(jpg|jpeg|png|gif)$/i)){const s=URL.createObjectURL(o.response),{img:i}=this.imageStock[e];i.addEventListener("load",(()=>{this.preserve[e]||URL.revokeObjectURL(s),this.imageStock[e].progress=1,this.imageStock[e].loaded=!0;const o=this.imageStock[e].onLoadListeners;delete this.imageStock[e].onLoadListeners,t(i),o.forEach((e=>e(i)))})),i.src=s}else s(new Error("Invalid image."));else s(new Error(`Url could not load: ${e}`))})),o.addEventListener("error",(e=>{s(new Error("Network Error"))})),o.addEventListener("progress",(t=>{this.imageStock[e].progress=t.loaded/t.total})),o.send()}})):Promise.resolve(null)}}}},128:(e,t,s)=>{const{FileUtils:o}=s(965),{ImageLoader:i}=s(847);e.exports={FileUtils:o,ImageLoader:i}}},t={};function s(o){var i=t[o];if(void 0!==i)return i.exports;var a=t[o]={exports:{}};return e[o](a,a.exports,s),a.exports}(()=>{"use strict";const e={ActiveFromList:JSON.parse('{"$schema":"https://jacklehamster.github.io/dok-schema/auxiliaries/auxiliary-definition.json","Name":"ActiveFromList","namespace":"com.dok.napl","process":{"lang":"NAPL","methods":[{"name":"activeItem","return":{"subject":{"subject":"self","key":{"subject":"config","key":"list"}},"key":{"subject":"self","key":"index"},"equivalent":"{self[config.list][self.index]}"}}]}}'),Dialog:JSON.parse('{"$schema":"https://jacklehamster.github.io/dok-schema/auxiliaries/auxiliary-definition.json","Name":"Dialog","namespace":"com.dok.napl","process":{"lang":"NAPL"}}'),Reference:JSON.parse('{"$schema":"https://jacklehamster.github.io/dok-schema/auxiliaries/auxiliary-definition.json","Name":"Reference","namespace":"com.dok.napl","process":{"lang":"NAPL","sequence":[{"load":{"url":{"subject":"config","key":"path"}},"equivalent":{"load":"url=config[path]"}},{"condition":{"subject":"params","check":"not empty"},"goDeep":{"type":"key-value","sequence":[{"subject":{"subject":"config","key":"params"},"key":{"subject":"value"}},{"condition":{"check":"exist"},"key":"value","assignTo":"var"}]},"equivalent":{"goDeep":{"type":"key-value","value?=":"{config.params[value]}"}}}]}}'),Scene:JSON.parse('{"$schema":"https://jacklehamster.github.io/dok-schema/auxiliaries/auxiliary-definition.json","Name":"Scene","namespace":"com.dok.napl","aux":{"ActiveFromList":{"list":"scenes"}}}'),Workspace:JSON.parse('{"$schema":"https://jacklehamster.github.io/dok-schema/auxiliaries/auxiliary-definition.json","Name":"Workspace","namespace":"com.dok.napl","aux":{"ActiveFromList":{"list":"apps"}}}')};var t=s(128);class o{constructor(e){this.fileUtils=null!=e?e:new t.FileUtils(XMLHttpRequest)}load(e="sample/sample.json"){return t=this,s=void 0,i=function*(){return yield this.fileUtils.load(e,"json")},new((o=void 0)||(o=Promise))((function(e,a){function n(e){try{l(i.next(e))}catch(e){a(e)}}function r(e){try{l(i.throw(e))}catch(e){a(e)}}function l(t){var s;t.done?e(t.value):(s=t.value,s instanceof o?s:new o((function(e){e(s)}))).then(n,r)}l((i=i.apply(t,s||[])).next())}));var t,s,o,i}getAuxiliaries(e){}process(e){var t;console.log(Object.keys(e)),console.log(Object.keys(null!==(t=e.aux)&&void 0!==t?t:{}))}}document.addEventListener("DOMContentLoaded",(function(){return t=this,s=void 0,a=function*(){const t=document.createElement("div");t.style.position="absolute",t.style.top="0px",t.style.left="0px",t.style.backgroundColor="silver",t.style.width="100vw",t.style.padding="5px",t.style.margin="0px",t.style.opacity=".8",t.style.cursor="pointer",t.style.whiteSpace="pre",t.style.fontFamily="monospace",t.addEventListener("mousedown",(()=>document.body.removeChild(t))),console.log(e),document.body.appendChild(t);const s=new o,i=yield s.load();t.innerText=JSON.stringify(i,null,"  "),s.process(i)},new((i=void 0)||(i=Promise))((function(e,o){function n(e){try{l(a.next(e))}catch(e){o(e)}}function r(e){try{l(a.throw(e))}catch(e){o(e)}}function l(t){var s;t.done?e(t.value):(s=t.value,s instanceof i?s:new i((function(e){e(s)}))).then(n,r)}l((a=a.apply(t,s||[])).next())}));var t,s,i,a}))})()})();
//# sourceMappingURL=main.js.map