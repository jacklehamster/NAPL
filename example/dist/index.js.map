{
  "version": 3,
  "sources": ["../../node_modules/fixed-framerate-loop/dist/index.js", "../../src/core/Registry.ts", "../../src/core/ProjectProcessor.ts", "../../src/core/DefaultComponents.ts", "../../src/core/ProjectLoader.ts", "../src/index.ts"],
  "sourcesContent": [
    "var G=1000,j=16.5,H=10;class l{requestAnimationFrame;cancelAnimationFrame;maxLoopJump;constructor({requestAnimationFrame:d=globalThis.requestAnimationFrame.bind(globalThis),cancelAnimationFrame:b=globalThis.cancelAnimationFrame.bind(globalThis)}={},{maxLoopJump:c=H}={}){this.requestAnimationFrame=d,this.cancelAnimationFrame=b,this.maxLoopJump=c}startLoop(d,b={}){const c=b.frameDuration??(b.frameRate?G/b.frameRate:void 0)??j;let R=0;function w(k,r){if(k>r)return R-=c*(k-r),r;return k}const{maxLoopJump:z,requestAnimationFrame:y,cancelAnimationFrame:E}=this;let f=0;const B=(k)=>{I=y(B);const r=w(Math.round((k+R-f)/c),z);for(let v=0;v<r;v++)f+=c,d(f,v===r-1)};let I=y(B);return()=>{E(I)}}}export{l as FixedFramerateLoop,j as DEFAULT_FRAME_DURATION};\n\n//# debugId=239300A0D73EF6F564756e2164756e21\n",
    "import { RegistryConfig } from \"@/model/RegistryConfig\";\nimport { Component } from \"./Component\";\n\nexport type Components = Record<string, Component>;\n\nconst SAVED_MODULES: Record<string, any> = {};\n\nexport async function importAndRegister({ name, modulePath }: RegistryConfig, components: Components) {\n  try {\n    const module = SAVED_MODULES[modulePath] ?? (SAVED_MODULES[modulePath] = await import(modulePath));\n    const component = module[name] ?? module.default as Component;\n    components[name] = component;\n  } catch (error) {\n    console.error(`Failed to import module ${modulePath}:`, error);\n  }\n}\n",
    "import { Code } from \"../model/Code\";\nimport { Project } from \"../model/Project\";\nimport { RegistryConfig } from \"../model/RegistryConfig\";\nimport { LoopCycle } from \"./LoopCycle\";\nimport { Components, importAndRegister } from \"./Registry\";\n\nexport function processProject(project: Project, components: Components) {\n  const loopCyclesPerScene: LoopCycle[][] = [];\n  const newComponents = { ...components };\n  processRegistry(project.registry, newComponents);\n  project.scenes.forEach((scene, index) => processCode(scene, newComponents, project, loopCyclesPerScene[index] = []));\n  return loopCyclesPerScene;\n}\n\nfunction processRegistry(registryConfig: RegistryConfig[] | undefined, components: Components): void {\n  registryConfig?.forEach((config) => importAndRegister(config, components));\n}\n\nfunction processCode(code: Code | Code[], components: Components, project: Project, loopCycles: LoopCycle[]): void {\n  if (Array.isArray(code)) {\n    code.forEach((item) => processCode(item, components, project, loopCycles));\n    return;\n  }\n  const newComponents = { ...components };\n  //  registry\n  processRegistry(code.registry, newComponents);\n  //  type\n  if (code.type) {\n    newComponents[code.type]?.init?.(code, project);\n    if (newComponents[code.type]?.loop) {\n      loopCycles.push({ component: newComponents[code.type], code });\n    }\n  }\n  //  process all children\n  for (let key in code) {\n    if (code[key] instanceof Object) {\n      processCode(code[key], newComponents, project, loopCycles);\n    }\n  }\n}\n",
    "import { Component } from \"./Component\";\n\nexport const DEFAULT_COMPONENTS: Record<string, Component> = {\n\n};\n",
    "import { Project } from \"@/model/Project\";\nimport { FixedFramerateLoop } from \"fixed-framerate-loop\";\nimport { Component } from \"./Component\";\nimport { processProject } from \"./ProjectProcessor\";\nimport { DEFAULT_COMPONENTS } from \"./DefaultComponents\";\n\nexport function executeProject(project: Project, components: Record<string, Component> = DEFAULT_COMPONENTS) {\n  const projectComponents = { ...DEFAULT_COMPONENTS, ...components };\n\n  const loopCyclesPerScene = processProject(project, projectComponents);\n\n  const looper = new FixedFramerateLoop();\n\n  const stop = looper.startLoop((time, render) => {\n    loopCyclesPerScene[project.sceneIndex]?.forEach(({ component, code }) => {\n      component.loop?.(code, project, time, render);\n    });\n  });\n  return { project, stop };\n}\n",
    "// To recognize dom types (see https://bun.sh/docs/typescript#dom-types):\n/// <reference lib=\"dom\" />\n/// <reference lib=\"dom.iterable\" />\n\nimport { executeProject } from \"napl\";\n\nconst { project, stop } = executeProject({\n  scenes: [\n    {\n      loopTest: {\n        type: \"LoopTest\",\n      },\n    },\n    {\n      loopTest2: {\n        type: \"LoopTest\",\n      },\n    },\n  ],\n  sceneIndex: 0\n}, {\n  LoopTest: {\n    init: (code, project) => {\n      const button = document.body.appendChild(document.createElement(\"button\"));\n      button.textContent = \">>\";\n      button.onclick = () => {\n        project.sceneIndex = (project.sceneIndex + 1) % project.scenes.length;\n      }\n    },\n    loop: (code, project, delta, render) => {\n      code.test = (code.test || 0) + 1;\n    },\n  }\n});\n\nconst div = document.body.appendChild(document.createElement(\"div\"));\ndiv.style.whiteSpace = \"pre\";\ndiv.style.fontFamily = \"monospace\";\ndiv.style.fontSize = \"12px\";\n\nfunction loop() {\n  div.textContent = JSON.stringify(project.scenes[project.sceneIndex], null, 2);\n}\nrequestAnimationFrame(function raf(time) {\n  loop();\n  requestAnimationFrame(raf);\n});\n"
  ],
  "mappings": "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",
  "debugId": "C44AC4CA2567CE1564756E2164756E21",
  "names": []
}